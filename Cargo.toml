[package]
name = "cbt_emulator"
version = "0.1.0"
authors = ["Maks Rawski <maksymilian.rawski@tutanota.com>"]
edition = "2021"
license = "MIT"

[lib]
name = "cbt_emulator"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

# [lib]
# name = "cbt_emulator_wasm"
# path = "src/lib.rs"
# crate-type = ["cdylib"]

[features]
default = [ "console_error_panic_hook" ]

[dependencies]
# wasm-bindgen = { version = "0.2.82", features = ["serde-serialize"] }
wasm-bindgen = { version = "0.2.82" }

zstd-safe = { version = "5.0.2", default-features = false, features = ["std"] }

web-sys = { version = "0.3.44", features = ["console"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
# wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

# [target.wasm32-unknown-unknown]
# runner = "wasm-bindgen-test-runner"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
